1). Catching a SIGINT at a particular time during setting the future 
    result will cause a message to double unreference and crash.

    Traceback:
    _PyEval_EvalFrameDefault (f=0x7ffff680b3d0, throwflag=<optimized out>) at Python/ceval.c:2499
    2499                         PUSH(ptr);

2). Canceling future or not awaiting on it will cause a memory leak.
    This can be fixed by a simple await sleep(0) after calling subroutine
    that awaits on cancelled future.

3). Integer types smaller than 64 bits will silently overflow and underflow. Needs a custom
    overflow/underflow detector.
